# -*- coding: iso-8859-1 -*-
#
#    http://physics.nist.gov/cuu/Constants/index.html
#

from __future__ import print_function, division
import sys
if( sys.version_info[0] == 2 ):
    range = xrange
import math


C   = 299792458.0      # m.s-1
NA  = 6.02214129e23    # mol-1
H   = 6.62606957e-34   # J.s
KB  = 1.3806488e-23    # J.K-1
R   = 8.3144621        # J.mol-1.K-1
ME  = 9.10938291e-31   # kg
A0  = 0.52917721092    # 1e-10.m
EV  = 1.602176565e-19  # eV >> J
HA  = 4.35974434e-18   # Ha >> J

K2J = 4.184            # cal >> J
J2K = 0.239005736138   # J >> cal
H2K = 627.509474277194 # Ha >> kcal.mol-1
H2J = 2625.49964037578 # Ha >> kJ.mol-1
R2D = 180.0 / math.pi  # Radians to dregrees




def water_density( temp = 300.0 ):
    tmp = min( max( -8.0, temp - 273.15 ), 108.0 )
    tab = [ 0.998120,0.998398,0.998650,0.998877,0.999080,0.999259,0.999417,0.999553,0.999669,0.999765,
        0.9998425,0.9999015,0.9999429,0.9999672,0.9999750,0.9999668,0.9999432,0.9999045,0.9998512,0.9997838,
        0.9997026,0.9996018,0.9995004,0.9993801,0.9992474,0.9991026,0.9989460,0.9987779,0.9985986,0.9984082,
        0.9982071,0.9979955,0.9977735,0.9975415,0.9972995,0.9970479,0.9967867,0.9965162,0.9962365,0.9959478,
        0.9956502,0.9953440,0.9950292,0.9947060,0.9943745,0.9940349,0.9936872,0.9933316,0.9929683,0.9925973,
        0.9922187,0.9918327,0.9914394,0.9910388,0.9906310,0.9902162,0.9897944,0.9893657,0.9889303,0.9884881,
        0.9880393,0.9875839,0.9871220,0.9866537,0.9861791,0.9856982,0.9852111,0.9847178,0.9842185,0.9837132,
        0.9832018,0.9826846,0.9821615,0.9816327,0.9810981,0.9805578,0.9800118,0.9794603,0.9789032,0.9783406,
        0.9777726,0.9771991,0.9766203,0.9760361,0.9754466,0.9748519,0.9742520,0.9736468,0.9730366,0.9724212,
        0.9718007,0.9711752,0.9705446,0.9699091,0.9692686,0.9686232,0.9679729,0.9673177,0.9666576,0.9659927,
        0.9653230,0.9646486,0.9639693,0.9632854,0.9625967,0.9619033,0.9612052,0.9605025,0.9597951,0.9590831,
        0.9583665,0.957662,0.956937,0.956207,0.955472,0.954733,0.953989,0.953240,0.952488,0.941730 ]
    i = math.floor( tmp )
    p = tmp - i
    p2m1 = p * p - 1.0
    p2m4 = p2m1 - 3.0
    i = int( i ) + 10
    d = p2m1 * p * ( p - 2.0 ) * tab[i-2] / 24.0 - ( p - 1.0 ) * p * p2m4 * tab[i-1] / 6.0 + p2m1 *p2m4 * tab[i] / 4.0 - ( p + 1.0 ) * p * p2m4 * tab[i+1] / 6.0 + p2m1 * p * ( p + 2.0 ) * tab[i+2] / 24.0
    return( d )

