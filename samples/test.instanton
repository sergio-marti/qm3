import  io
import  os
import  struct
import  base64
import  qm3.mol
import  qm3.engines.mopac
import  qm3.actions.minimize
import  qm3.maths.matrix
import  qm3.actions.ring_polymer


r_func = -3.558762441e+02
r_coor = [-2.521569373e+00,-8.109596387e-01, 1.661293337e-01,-1.309782902e+00, 6.598676712e-02,
         1.366061713e-01,-3.443063157e+00,-2.043454830e-01, 3.433806391e-01,-2.420244396e+00,
        -1.569430532e+00, 9.805986506e-01,-2.619434960e+00,-1.345828571e+00,-8.107097632e-01,
        -3.936765920e-02,-6.242319142e-01,-2.294154654e-02, 1.175905119e+00,-2.261306881e-02,
        -7.576620350e-02,-9.123056401e-02,-1.720399344e+00,-1.043576308e-01, 2.448169818e+00,
        -7.822558298e-01,-2.249744228e-01, 2.276500410e+00,-1.710134080e+00,-8.218599844e-01,
         2.828121291e+00,-1.066038004e+00, 7.886515516e-01, 3.223389846e+00,-1.545223498e-01,
        -7.305422994e-01, 1.404636719e+00, 1.316721700e+00, 5.703126973e-03,-1.403478305e+00,
         1.303353888e+00, 2.416814634e-01, 5.639863859e-01, 1.798536179e+00, 1.175917498e-01 ]
r_hess = """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"""
r_hess = qm3.maths.matrix.from_upper_diagonal_rows( struct.unpack( "1035d", base64.b64decode( r_hess ) ), 45 )


t_func = -2.688534420e+02
t_coor = [-2.522680307e+00,-7.246958984e-01, 1.601445509e-01,-1.199576546e+00,-5.352870457e-02,
         7.551550530e-02,-3.298123939e+00,-2.433694431e-02, 5.577546376e-01,-2.458010051e+00,
        -1.623510137e+00, 8.213127507e-01,-2.829607328e+00,-1.054208512e+00,-8.652309031e-01,
        -7.797913169e-04,-7.870809465e-01, 5.525062209e-03, 1.197843713e+00,-5.540692191e-02,
        -8.432875641e-02,-6.663113603e-04,-1.878767329e+00, 2.031546700e-02, 2.521125333e+00,
        -7.282609838e-01,-1.507275223e-01, 2.456079240e+00,-1.646351895e+00,-7.848071286e-01,
         2.829531703e+00,-1.026976041e+00, 8.836082128e-01, 3.295733950e+00,-3.964780873e-02,
        -5.699261398e-01, 1.172641092e+00, 1.245991615e+00,-1.026088826e-01,-1.174686468e+00,
         1.247890806e+00, 5.852153933e-02,-1.075739946e-03, 1.617948627e+00,-2.707209408e-02 ]
t_hess = """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"""
t_hess = qm3.maths.matrix.from_upper_diagonal_rows( struct.unpack( "1035d", base64.b64decode( t_hess ) ), 45 )


mol = qm3.mol.molecule()
f = io.StringIO( """15

C          -2.5226803073       -0.7246958984        0.1601445509
C          -1.1995765456       -0.0535287046        0.0755155053
H          -3.2981239394       -0.0243369443        0.5577546376
H          -2.4580100512       -1.6235101367        0.8213127507
H          -2.8296073276       -1.0542085116       -0.8652309031
C          -0.0007797913       -0.7870809465        0.0055250622
C           1.1978437126       -0.0554069219       -0.0843287564
H          -0.0006663114       -1.8787673288        0.0203154670
C           2.5211253331       -0.7282609838       -0.1507275223
H           2.4560792403       -1.6463518948       -0.7848071286
H           2.8295317028       -1.0269760408        0.8836082128
H           3.2957339499       -0.0396478087       -0.5699261398
O           1.1726410920        1.2459916150       -0.1026088826
O          -1.1746864683        1.2478908060        0.0585215393
H          -0.0010757399        1.6179486274       -0.0270720941
""" )
mol.xyz_read( f )
mol.guess_atomic_numbers()
mol.fill_masses()


class my_model( qm3.actions.ring_polymer.model ):
    def __init__( self, molec ):
        qm3.actions.ring_polymer.model.__init__( self, molec )
        self.sele = list( range( molec.natm ) )
        self.size = 3 * len( self.sele )
        self.eqm = qm3.engines.mopac.dl_mopac( molec, "AM1", 0, 1, self.sele )

    def get_grad( self, molec ):
        molec.func = 0.0
        molec.grad = [ 0.0 for i in range( 3 * molec.natm ) ]
        self.eqm.get_grad( molec )


class my_insta( qm3.actions.ring_polymer.instanton ):
    def __init__( self, mole, sele, engn, num_beads = 64, temperature = 300.0 ):
        qm3.actions.ring_polymer.instanton.__init__( self, mole, sele, engn, num_beads, temperature )

    def current_step( self, istep ):
        f = open( "output", "at" )
        f.write( "%d\n\n"%( self.size // 3 ) )
        for i in range( self.half + 1 ):
            i_cc = i * self.disp
            for j in range( len( self.sele ) ):
                j3 = i_cc + j * 3
                f.write( "%-2s%20.10lf%20.10lf%20.10lf\n"%( self.mole.labl[self.sele[j]][0],
                    self.coor[j3], self.coor[j3+1], self.coor[j3+2] ) )
        f.close()
#        if( os.path.isfile( "update.dump" ) ):
#            os.unlink( "update.dump" )


obj = my_insta( mol, list( range( mol.natm ) ), my_model( mol ) )
obj.calc_tst( r_coor, r_func, r_hess, t_coor, t_func, t_hess, t_symm = 2.0 )
obj.setup()

obj.current_step( -1 )
qm3.actions.minimize.baker( obj, print_frequency = 1, step_size = 0.1, gradient_tolerance = 0.1, step_number = 500, follow_mode = 0 )
obj.calc_rpt( r_coor, r_func, r_hess )

import matplotlib.pyplot as plt
plt.clf()
plt.grid( True )
plt.plot( obj.ener, '-o' )
plt.savefig( "output.pdf" )
