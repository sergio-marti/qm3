\normalsize
\subsection[gaussian]{gaussian.py}
This module provides two different classes for performing gaussian QM/MM calculations.
The default one (\func{gaussian}) performs full QM/MM, thus returning the electrostatic
gradient on the MM atoms (expressing the force as the electric field generated by the QM
 atoms on the MM positions multiplied by the MM charge).\\
When gaussian is called without the option: "prop=(field,read)", it will need the "\_qmmm.Int\_QMLJ\_MMEL" fix (instead of
"\_qmmm.Int\_QMLJ"), thus being
the gradient classically calculated on the MM charges, using the fitted QM charges. The strenght of this 
approach lies on the micro/macro optimization schemes (ie, second-order minimization algorithms which
allows thousands of MM-gradient evaluations by each QM-hessian calculation).
\begin{pyglist}[language=python,fvset={frame=single}]
class run_single( mol, inp, sele, nbnd = [], link = [] )
    def get_func( mol )
    def get_grad( mol )
    def get_hess( mol )
\end{pyglist}

\footnotesize
\begin{pyglist}[language=python,fvset={frame=single}]
#SOURCE@../samples/test.gaussian
\end{pyglist}
\begin{pyglist}[fvset={frame=single}]
#SOURCE@../samples/logs/test.gaussian.log
\end{pyglist}
